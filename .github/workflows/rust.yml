name: Rust CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta, nightly]
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Install the Rust toolchain
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}

      # Cache the Cargo registry and build artifacts for faster workflows
      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      # Build the project
      - name: Build
        run: cargo build --verbose

      # Run tests
      - name: Test
        run: cargo test --verbose

      # Run Clippy for linting (except on nightly where Clippy may fail)
      - name: Lint with Clippy
        if: ${{ matrix.rust != 'nightly' }}
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Check code formatting
        run: cargo fmt --all -- --check
